/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
	
	//compile fileTree(dir: 'lib', include: ['*.jar'])
	compile (
			'com.jtattoo:JTattoo:1.6.7',
			'mysql:mysql-connector-java:5.1.45',
			'javax.xml:jaxb-impl:2.1',
			'de.micromata.jak:JavaAPIforKml:2.2.0',
			'javax.xml.bind:jaxb-api:2.2',
			'org.hamcrest:hamcrest-core:1.3'
			
	)

	
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

task copyJar(type: Copy) {
  from "lib"
  into "build/libs"
  include "*.jar"
  println("copyJar")
}

task gui(type: JavaExec) {
	
   	main = 'GUI.GUI'
    classpath = sourceSets.main.runtimeClasspath
}

task fatJar(type: Jar) {
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {
        attributes 'Main-Class': 'GUI.GUI'
    }
    println("fatJar")
}

task zip(type: Zip) {

    from('Input_data/') {
	into('Input_data')        
	}
	
	from('Output_data/') {
	into('Output_data')        
	}
	
	from('doc/') {
	into('doc')        
	}
	
	from('docs/') {
	into('docs')        
	}

    from('src/') {
	into('src')        
	}
	
    from('lib/') {
        include '*.jar'
        into('libs')
    }
    
    from('Images/') {
        into('Images')

    }
       
	from('/'){
	include 'build.gradle','.classpath','.project','.gitignore','settings.gradle'
	into('')
	}
}


build.finalizedBy(copyJar)

